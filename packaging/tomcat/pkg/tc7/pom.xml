<?xml version="1.0"?>
<?rename tofile="portal.war"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.exoplatform.portal</groupId>
    <artifactId>exo.portal.packaging.tomcat.pkg</artifactId>
    <version>3.2.0-M02-SNAPSHOT</version>
  </parent>
  <artifactId>exo.portal.packaging.tomcat.pkg.tc7</artifactId>
  <packaging>pom</packaging>
  <name>GateIn for Tomcat 7 packaging</name>

  <properties>
    <tomcat.dir>${exo.projects.directory.dependencies}/${exo.projects.app.tomcat7.version}</tomcat.dir>
    <servers.dir>${exo.projects.directory.dependencies}</servers.dir>
    <tomcat.path>${servers.dir}</tomcat.path>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.gatein.wci</groupId>
      <artifactId>wci-tomcat7</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <!-- Ensure your environment is correctly setup -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>tomcat-check-environment-ready</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>exo.projects.app.tomcat7.version</property>
                  <message>"You must define the property exo.projects.app.tomcat7.version to give the name of the directory where is stored tomcat"</message>
                </requireProperty>
                <requireFilesExist>
                  <files>
                    <file>${tomcat.dir}/</file>
                  </files>
                  <message>"The following Tomcat directory doesn't exist : ${tomcat.dir}"</message>
                </requireFilesExist>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.4.1</version>
        <executions>
          <execution>
            <id>auto-clean</id>
            <phase>initialize</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.6</version>
        <executions>
          <execution>
            <id>prepare-package</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <ant antfile="${project.basedir}/package.xml" inheritRefs="true">
                  <target name="package" />
                  <property name="maven.project.basedir" value="${project.basedir}" />
                  <property name="maven.project.build.directory" value="${project.build.directory}" />
                </ant>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>download</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>tomcat-check-environment-ready</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>prepare-package</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <!-- Autocreate servers.dir if necessary -->
                    <mkdir dir="${tomcat.path}" />

                    <!-- Fetch tomcat7 mirror url, then .zip -->
                    <get dest="${project.build.directory}/mirror.xml" skipexisting="true">
                      <url url="http://tomcat.apache.org/download-70.cgi" />
                    </get>

                    <replaceregexp file="${project.build.directory}/mirror.xml" match="&lt;!DOCTYPE(.*)&gt;" replace="" byline="true" />

                    <xslt basedir="${project.build.directory}" destdir="${project.build.directory}" includes="mirror.xml" extension=".xml" style="${project.basedir}/extract-download-urls.xsl">

                      <mapper type="glob" from="mirror.xml" to="download-urls.xml" />
                    </xslt>

                    <replaceregexp file="${project.build.directory}/download-urls.xml" match="&lt;dir.name&gt;(.*)/apache-tomcat-(.*).zip&lt;/dir.name&gt;" replace="&lt;dir.name&gt;apache-tomcat-\2&lt;/dir.name&gt;" byline="true" />

                    <xmlproperty file="${project.build.directory}/download-urls.xml" />

                    <basename file="${tomcat.download.url}" property="tomcat.file.name" />
                    <property name="tomcat.zip" value="${tomcat.path}/${tomcat.file.name}" />
                    <property name="tomcat.dir.effective" value="${tomcat.path}/${tomcat.download.dir.name}" />

                    <available property="tomcat.dir.exists" type="dir" file="${tomcat.dir.effective}" />

                    <!-- echoproperties / -->

                    <fail if="tomcat.dir.exists">
"
Destination Tomcat directory exists already:
                      ${tomcat.dir.effective}

Either rename it, delete it, or deactivate -Pdownload profile.
"
                    </fail>

                    <!-- Download Tomcat unless already downloaded -->
                    <ant antfile="${project.basedir}/download-tomcat.xml">
                      <target name="download-tomcat" />
                      <property name="url" value="${tomcat.download.url}" />
                      <property name="md5.url" value="${tomcat.download.url.md5}" />
                      <property name="dest" value="${tomcat.zip}" />
                    </ant>

                    <!-- Extract downloaded Tomcat to servers dir -->
                    <unzip src="${tomcat.zip}" dest="${tomcat.path}" overwrite="false" />

                    <ant antfile="${project.basedir}/package.xml" inheritRefs="true">
                      <target name="package" />
                      <property name="tomcat.dir" value="${tomcat.dir.effective}" />
                      <property name="maven.project.basedir" value="${project.basedir}" />
                      <property name="maven.project.build.directory" value="${project.build.directory}" />
                    </ant>

                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>bundle</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>package</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <zip destfile="${project.build.directory}/tomcat7.zip" basedir="${project.build.directory}/tomcat7" />
                    <attachartifact file="${project.build.directory}/tomcat7.zip" classifier="bundle" type="zip" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>